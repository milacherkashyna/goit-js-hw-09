{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAzCGQ,SAASC,cAAc,SAC/BC,iBAAiB,UACzB,SAAsBC,GAEpB,GADAA,EAAMC,iBAEkC,KAAtCD,EAAME,OAAOC,SAASd,MAAMe,OACS,KAArCJ,EAAME,OAAOC,SAASE,KAAKD,OACY,KAAvCJ,EAAME,OAAOC,SAASG,OAAOF,MAG7B,YADAG,EAAAtB,GAASuB,OAAOC,QAAQ,0BAG1B,MAAMH,GAAUN,EAAME,OAAOC,SAASG,OAAOF,MAC7C,IAAIM,GAASV,EAAME,OAAOC,SAASd,MAAMe,MACzC,MAAMC,GAAQL,EAAME,OAAOC,SAASE,KAAKD,MACzCJ,EAAME,OAAOS,QACb,IAAK,IAAIC,EAAQ,EAAGA,GAASN,EAAQM,IACnCzB,EAAcyB,EAAOF,GAClBG,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAAtB,GAASuB,OAAOM,QACd,uBAAqB1B,QAAiBC,MAAU,IAGnD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBkB,EAAAtB,GAASuB,OAAOC,QACd,sBAAoBrB,QAAeC,MAAU,IAGnDqB,GAASL,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormSubmit);\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  if (\n    event.target.elements.delay.value === '' ||\n    event.target.elements.step.value === '' ||\n    event.target.elements.amount.value === ''\n  ) {\n    Notiflix.Notify.failure('Please fill all fields');\n    return;\n  }\n  const amount = +event.target.elements.amount.value;\n  let delay = +event.target.elements.delay.value;\n  const step = +event.target.elements.step.value;\n  event.target.reset();\n  for (let index = 1; index <= amount; index++) {\n    createPromise(index, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","target","elements","value","step","amount","$parcel$interopDefault","Notify","failure","delay1","reset","index","then","success","catch"],"version":3,"file":"03-promises.d2737846.js.map"}